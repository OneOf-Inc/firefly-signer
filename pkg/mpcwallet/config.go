// Copyright Â© 2024 Kaleido, Inc.
//
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package mpcwallet

import "github.com/hyperledger/firefly-common/pkg/config"

const (
	// ConfigURL the url of the mpc wallet
	ConfigURL = "url"
	// ConfigPath the path for the addresses generated by MPC wallet
	ConfigPath = "path"
	// ConfigDisableListener disable the filesystem listener that detects newly added keys automatically
	ConfigDisableListener = "disableListener"
	// ConfigFilenamesPrimaryMatchRegex allows filenames where the address can be extracted with a regular expression. Takes precedence over primaryExt
	ConfigFilenamesPrimaryMatchRegex = "filenames.primaryMatchRegex"
	// ConfigFilenamesPrimaryExt extension to append to the "from" address string to find the file (see metadata section for file types). All filenames must be lower case on disk.
	ConfigFilenamesPrimaryExt = "filenames.primaryExt"
)

type Config struct {
	WalletURL       string
	Path            string
	DisableListener bool
	Filenames       FilenamesConfig
}

type FilenamesConfig struct {
	PrimaryMatchRegex string
	PrimaryExt        string
}

func InitConfig(section config.Section) {
	section.AddKnownKey(ConfigURL)
	section.AddKnownKey(ConfigPath)
	section.AddKnownKey(ConfigDisableListener)
	section.AddKnownKey(ConfigFilenamesPrimaryMatchRegex)
	section.AddKnownKey(ConfigFilenamesPrimaryExt)
}

func ReadConfig(section config.Section) *Config {
	return &Config{
		WalletURL:       section.GetString(ConfigURL),
		Path:            section.GetString(ConfigPath),
		DisableListener: section.GetBool(ConfigDisableListener),
		Filenames: FilenamesConfig{
			PrimaryMatchRegex: section.GetString(ConfigFilenamesPrimaryMatchRegex),
			PrimaryExt:        section.GetString(ConfigFilenamesPrimaryExt),
		},
	}
}
